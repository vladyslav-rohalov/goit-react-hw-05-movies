{"version":3,"file":"static/js/262.442526c4.chunk.js","mappings":"uPAEaA,EAAOC,EAAAA,EAAAA,GAAH,sWAmBJC,EAASD,EAAAA,EAAAA,GAAH,wdAmBNE,EAAIF,EAAAA,EAAAA,EAAH,iHAODG,EAASH,EAAAA,EAAAA,EAAH,yFAMNI,EAAOJ,EAAAA,EAAAA,EAAH,yF,SChDF,SAASK,IACtB,OAA6BC,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IACMC,EAAG,6CAAyCH,EAAzC,4BADG,mCACH,mBACTI,EAAAA,EAAAA,IACOD,GACJE,MAAK,SAAAC,GACJP,EAAUO,EAASC,KAAKC,QACzB,IACAC,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EACjB,GACJ,GAAE,CAACV,KAGF,SAACV,EAAD,UACGQ,EAAQc,OAAS,EAChBd,EAAQe,KAAI,SAAAC,GACV,OACE,UAACtB,EAAD,YACE,UAACE,EAAD,qBAAgBoB,EAAOC,WACvB,SAACpB,EAAD,UAAOmB,EAAOE,YAFHF,EAAOd,GAKvB,KAED,SAACP,EAAD,wDAIP,C","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Revies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  padding-bottom: 20px;\n  padding-top: 20px;\n  @media (min-width: 768px) {\n    gap: 32px;\n    padding-top: 28px;\n    padding-bottom: 28px;\n  }\n  @media (min-width: 1280px) {\n    gap: 16px;\n    padding-top: 28px;\n    padding-bottom: 28px;\n  }\n`;\n\nexport const Review = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  justify-content: space-between;\n  width: 100%;\n  padding: 8px\n  border: 1px solid #eeeeee;\n  transform: scale(1);\n  transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n    transform: scale(1.03);\n  }\n`;\n\nexport const P = styled.p`\n  text-align: center;\n  font-weight: 500;\n  font-size: 20px;\n  padding-bottom: 40px;\n`;\n\nexport const Author = styled.p`\n  font-weight: 400;\n  font-size: 18px;\n  padding-bottom: 8px;\n`;\n\nexport const Post = styled.p`\n  font-weight: 400;\n  font-size: 14px;\n  text-align: justify;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { List, Author, P, Post, Review } from './Reviews.styled';\n\nexport default function Reviews() {\n  const [reviews, setReview] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const KEY = '1a79c64c84b315bdc21ee91736e10707';\n    const URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`;\n    axios\n      .get(URL)\n      .then(response => {\n        setReview(response.data.results);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, [id]);\n\n  return (\n    <List>\n      {reviews.length > 0 ? (\n        reviews.map(review => {\n          return (\n            <Review key={review.id}>\n              <Author>Author:{review.author}</Author>\n              <Post>{review.content}</Post>\n            </Review>\n          );\n        })\n      ) : (\n        <P>We don't have any reviews for this movie</P>\n      )}\n    </List>\n  );\n}\n"],"names":["List","styled","Review","P","Author","Post","Reviews","useState","reviews","setReview","id","useParams","useEffect","URL","axios","then","response","data","results","catch","error","Error","length","map","review","author","content"],"sourceRoot":""}