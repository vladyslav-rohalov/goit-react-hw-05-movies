{"version":3,"file":"static/js/368.30281e8d.chunk.js","mappings":"uQAEaA,EAAYC,EAAAA,EAAAA,IAAH,+CAITC,EAAUD,EAAAA,EAAAA,IAAH,0CAIPE,EAAKF,EAAAA,EAAAA,GAAH,+GAOFG,EAAKH,EAAAA,EAAAA,GAAH,+GAOFI,EAAIJ,EAAAA,EAAAA,EAAH,+GAODK,EAAQL,EAAAA,EAAAA,IAAH,gEAKLM,EAAKN,EAAAA,EAAAA,GAAH,wGAQFO,EAAKP,EAAAA,EAAAA,GAAH,qDAKFQ,EAASR,EAAAA,EAAAA,OAAH,gY,SClCJ,SAASS,IAAgB,IAAD,IACrC,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,SAgB7C,OAdAC,EAAAA,EAAAA,YAAU,WACR,IACMC,EAAG,6CAAyCP,EAAzC,oBADG,mCACH,mBACTQ,EAAAA,EAAAA,IACOD,GACJE,MAAK,SAAAC,GACJX,EAAaW,EAASC,MACtBC,QAAQC,IAAIH,EAASC,KACtB,IACAG,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EACjB,GACJ,GAAE,CAACf,KAGF,UAACd,EAAD,YACE,SAAC,KAAD,CAAM+B,GAAIf,EAAV,UACE,SAACP,EAAD,CAAQuB,KAAK,SAAb,8BAGa,OAAdpB,IACC,UAACV,EAAD,WACGU,EAAUqB,aACT,SAAC3B,EAAD,CACE4B,IAAG,0CAAqCtB,EAAUqB,gBAGpD,SAAC3B,EAAD,CAAO4B,IAAKC,EAAQ,QAEtB,2BACGvB,EAAUwB,QACT,UAACjC,EAAD,WACGS,EAAUwB,MADb,WAEOxB,EAAUyB,aAAaC,MAAM,EAAG,GAFvC,QAKD1B,EAAU2B,aAAe,IACxB,UAACnC,EAAD,0BAAiBoC,KAAKC,MAA+B,GAAzB7B,EAAU2B,cAAtC,QAEF,SAACnC,EAAD,wBACA,SAACC,EAAD,UAAIO,EAAU8B,YACd,SAACtC,EAAD,sBACCQ,EAAU+B,SACT,SAACtC,EAAD,UAAIO,EAAU+B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,cAK5C,OAAdnC,IACC,UAACL,EAAD,YACE,SAACC,EAAD,WACE,SAAC,KAAD,CAAMuB,GAAG,OAAT,UACE,SAACtB,EAAD,wBAGJ,SAACD,EAAD,WACE,SAAC,KAAD,CAAMuB,GAAG,UAAT,UACE,SAACtB,EAAD,8BAKR,SAAC,EAAAuC,SAAD,WACE,SAAC,KAAD,QAIP,C","sources":["Pages/MovieDetails.styled.jsx","Pages/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding-left: 10px;\n`;\n\nexport const DivFlex = styled.div`\n  display: flex;\n`;\n\nexport const H2 = styled.h2`\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 1.33;\n  margin-bottom: 10px;\n`;\n\nexport const H3 = styled.h3`\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 1.33;\n  margin-bottom: 10px;\n`;\n\nexport const P = styled.p`\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.33;\n  margin-bottom: 10px;\n`;\n\nexport const Image = styled.img`\n  width: 300px;\n  margin-right: 10px;\n`;\n\nexport const UL = styled.ul`\ndisplay: flex;\ngap: 16px;\njustify-content: flex-start;\nmargin-top: 20px;\n\n}`;\n\nexport const LI = styled.li`    \nmargin-bottom: 10px;\n\n}`;\n\nexport const Button = styled.button`\n  background-color: orangered;\n  border: 1px solid transparent;\n  color: white;\n  padding: 0;\n  text-align: center;\n  text-transform: uppercase;\n  border-radius: 4px;\n  height: 32px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  margin-bottom: 10px;\n  font-weight: 500;\n  line-height: 1.33;\n  transition: scale 0.25s cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport axios from 'axios';\nimport {\n  Container,\n  H2,\n  H3,\n  Image,\n  DivFlex,\n  UL,\n  LI,\n  P,\n  Button,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [movieItem, setMovieItem] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? 'movies';\n\n  useEffect(() => {\n    const KEY = '1a79c64c84b315bdc21ee91736e10707';\n    const URL = `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`;\n    axios\n      .get(URL)\n      .then(response => {\n        setMovieItem(response.data);\n        console.log(response.data);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, [id]);\n\n  return (\n    <Container>\n      <Link to={backLinkHref}>\n        <Button type=\"button\">‚Üê Go back</Button>\n      </Link>\n\n      {movieItem !== null && (\n        <DivFlex>\n          {movieItem.poster_path ? (\n            <Image\n              src={`https://image.tmdb.org/t/p/w500/${movieItem.poster_path}`}\n            />\n          ) : (\n            <Image src={require('../image/noImage.png')} />\n          )}\n          <div>\n            {movieItem.title && (\n              <H2>\n                {movieItem.title}\n                {`(${movieItem.release_date.slice(0, 4)})`}\n              </H2>\n            )}\n            {movieItem.vote_average > 0 && (\n              <H3>User score: {Math.round(movieItem.vote_average * 10)}%</H3>\n            )}\n            <H3>Overviev</H3>\n            <P>{movieItem.overview}</P>\n            <H3>Genres </H3>\n            {movieItem.genres && (\n              <P>{movieItem.genres.map(genre => genre.name).join(', ')}</P>\n            )}\n          </div>\n        </DivFlex>\n      )}\n      {movieItem !== null && (\n        <UL>\n          <LI>\n            <Link to=\"cast\">\n              <Button>Cast</Button>\n            </Link>\n          </LI>\n          <LI>\n            <Link to=\"reviews\">\n              <Button>Reviews</Button>\n            </Link>\n          </LI>\n        </UL>\n      )}\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n}\n"],"names":["Container","styled","DivFlex","H2","H3","P","Image","UL","LI","Button","MovieDetails","useState","movieItem","setMovieItem","id","useParams","backLinkHref","useLocation","state","from","useEffect","URL","axios","then","response","data","console","log","catch","error","Error","to","type","poster_path","src","require","title","release_date","slice","vote_average","Math","round","overview","genres","map","genre","name","join","Suspense"],"sourceRoot":""}