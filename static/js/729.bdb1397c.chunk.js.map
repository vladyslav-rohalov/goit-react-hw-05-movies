{"version":3,"file":"static/js/729.bdb1397c.chunk.js","mappings":"oOAIe,SAASA,IACtB,OAA6BC,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IACMC,EAAG,6CAAyCH,EAAzC,4BADG,mCACH,mBACTI,EAAAA,EAAAA,IACOD,GACJE,MAAK,SAAAC,GACJP,EAAUO,EAASC,KAAKC,QACzB,IACAC,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EACjB,GACJ,GAAE,CAACV,KAGF,wBACGF,EAAQc,OAAS,EAChBd,EAAQe,KAAI,SAAAC,GACV,OACE,qCACWA,EAAOC,OADlB,KAC0B,uBAAID,EAAOE,YAD5BF,EAAOd,GAInB,KAED,qEAIP,C","sources":["components/Reviews/Revies.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function Reviews() {\n  const [reviews, setReview] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const KEY = '1a79c64c84b315bdc21ee91736e10707';\n    const URL = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US`;\n    axios\n      .get(URL)\n      .then(response => {\n        setReview(response.data.results);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, [id]);\n\n  return (\n    <ul>\n      {reviews.length > 0 ? (\n        reviews.map(review => {\n          return (\n            <li key={review.id}>\n              Author: {review.author} <p>{review.content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </ul>\n  );\n}\n"],"names":["Reviews","useState","reviews","setReview","id","useParams","useEffect","URL","axios","then","response","data","results","catch","error","Error","length","map","review","author","content"],"sourceRoot":""}