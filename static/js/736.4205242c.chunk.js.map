{"version":3,"file":"static/js/736.4205242c.chunk.js","mappings":"mPAEaA,EAAOC,EAAAA,EAAAA,GAAH,uHAQJC,EAAWD,EAAAA,EAAAA,GAAH,8GAORE,EAAUF,EAAAA,EAAAA,IAAH,0D,SCZL,SAASG,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IACMC,EAAG,6CAAyCH,EAAzC,4BADG,mCACH,mBACTI,EAAAA,EAAAA,IACOD,GACJE,MAAK,SAAAC,GACJP,EAAQO,EAASC,KAAKT,KACvB,IACAU,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EACjB,GACJ,GAAE,CAACT,KAGF,SAACR,EAAD,UACGM,EAAKa,KAAI,SAAAC,GACR,OACE,UAAClB,EAAD,WACyB,OAAtBkB,EAAKC,cACJ,SAAClB,EAAD,CACEmB,IAAG,0CAAqCF,EAAKC,cAC7CE,IAAG,gBAAWH,EAAKI,SAGrB,SAACrB,EAAD,CACEmB,IAAKG,EAAQ,KACbF,IAAG,gBAAWH,EAAKI,QAItBJ,EAAKI,OAbOJ,EAAKZ,GAgBvB,KAGN,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  justify-content: center;\n  padding: 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  width: 150px;\n  align-items: center;\n`;\n\nexport const CastImg = styled.img`\n  width: 80px;\n  height: 120px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { List, ListItem, CastImg } from './Cast.styled';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const KEY = '1a79c64c84b315bdc21ee91736e10707';\n    const URL = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`;\n    axios\n      .get(URL)\n      .then(response => {\n        setCast(response.data.cast);\n      })\n      .catch(error => {\n        throw new Error(error);\n      });\n  }, [id]);\n\n  return (\n    <List>\n      {cast.map(item => {\n        return (\n          <ListItem key={item.id}>\n            {item.profile_path !== null ? (\n              <CastImg\n                src={`https://image.tmdb.org/t/p/w500/${item.profile_path}`}\n                alt={`Photo ${item.name}`}\n              />\n            ) : (\n              <CastImg\n                src={require('../../image/noImage.png')}\n                alt={`Photo ${item.name}`}\n              />\n            )}\n\n            {item.name}\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n"],"names":["List","styled","ListItem","CastImg","Cast","useState","cast","setCast","id","useParams","useEffect","URL","axios","then","response","data","catch","error","Error","map","item","profile_path","src","alt","name","require"],"sourceRoot":""}